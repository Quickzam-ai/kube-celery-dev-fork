apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubemainfest.yaml
        kompose.version: 1.27.0 (b0ed6a2c9)
      creationTimestamp: null
      labels:
        io.kompose.service: flask-application
      name: flask_application
    spec:
      ports:
        - name: "5000"
          port: 5000
          targetPort: 5000
      selector:
        io.kompose.service: flask-application
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubemainfest.yaml
        kompose.version: 1.27.0 (b0ed6a2c9)
      creationTimestamp: null
      labels:
        io.kompose.service: flower
      name: flower
    spec:
      ports:
        - name: "5556"
          port: 5556
          targetPort: 5555
      selector:
        io.kompose.service: flower
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubemainfest.yaml
        kompose.version: 1.27.0 (b0ed6a2c9)
      creationTimestamp: null
      labels:
        io.kompose.service: celery-worker
      name: celery-worker
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: celery-worker
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o kubemainfest.yaml
            kompose.version: 1.27.0 (b0ed6a2c9)
          creationTimestamp: null
          labels:
            io.kompose.service: celery-worker
        spec:
          containers:
            - args:
                - celery
                - -A
                - tasks
                - worker
                - --loglevel=info
              image: raravindds/kube-celery-dev-fork-celery_worker
              name: celery-worker
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubemainfest.yaml
        kompose.version: 1.27.0 (b0ed6a2c9)
      creationTimestamp: null
      labels:
        io.kompose.service: flask-application
      name: flask-application
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: flask-application
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o kubemainfest.yaml
            kompose.version: 1.27.0 (b0ed6a2c9)
          creationTimestamp: null
          labels:
            io.kompose.service: flask-application
        spec:
          containers:
            - args:
                - flask
                - run
                - --host=0.0.0.0
              env:
                - name: MONGODB_HOST
                  value: mongodb
                - name: MONGODB_PORT
                  value: "27017"
                - name: REDIS_PORT
                  value: "6379"
                - name: REDIS_URL
                  value: redis
              image: flask-application
              name: flask-application
              ports:
                - containerPort: 5000
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubemainfest.yaml
        kompose.version: 1.27.0 (b0ed6a2c9)
      creationTimestamp: null
      labels:
        io.kompose.service: flower
      name: flower
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: flower
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o kubemainfest.yaml
            kompose.version: 1.27.0 (b0ed6a2c9)
          creationTimestamp: null
          labels:
            io.kompose.service: flower
        spec:
          containers:
            - args:
                - celery
                - -A
                - tasks.app
                - flower
                - --port=5555
              env:
                - name: CELERY_BROKER_URL
                  value: redis://redis:6379/0
                - name: CELERY_RESULT_BACKEND
                  value: redis://redis:6379/0
              image: flower
              name: flower
              ports:
                - containerPort: 5555
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubemainfest.yaml
        kompose.version: 1.27.0 (b0ed6a2c9)
      creationTimestamp: null
      labels:
        io.kompose.service: redis
      name: redis
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: redis
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o kubemainfest.yaml
            kompose.version: 1.27.0 (b0ed6a2c9)
          creationTimestamp: null
          labels:
            io.kompose.service: redis
        spec:
          containers:
            - image: redis:6.2-alpine
              name: redis
              resources: {}
          restartPolicy: Always
    status: {}
kind: List
metadata: {}

